//Time Complexity O(N)
class Solution {
public:
    vector<string> findRepeatedDnaSequences(string s) {
        unordered_map<string,int> seqCount; //stores 10 sized window substring
        vector<string> ans;
        if(s.size()<10) return {} ; // return empty
        //slide the 10 sized window
        for(int i=0;i<=s.size()-10;i++)
        {
            //n/10 windows miljayegi
            string currentsized=s.substr(i,10);//extracts 10 sized window
            seqCount[currentsized]++;
        }
         //repeated chahiye

         //basic way
        //  for(auto it:seqCount)
        //  {
        //     if(it.second>1)
        //     {
        //         ans.push_back(it.first);
        //     }
        //  }

        //destructing use krke 
        //& ref ke liye 
        //string ki copy na bane isliye & 
        for(auto & [substr,freq]:seqCount)
        {
            if(freq>1) ans.push_back(substr);
        }
         return ans;
    }
};
