GFG Add 1 to a Linked List Number
//{ Driver Code Starts
//Initial template for C++

#include <bits/stdc++.h> 
using namespace std; 

struct Node
{
    int data;
    struct Node* next;
    
    Node(int x){
        data = x;
        next = NULL;
    }
};

void printList(Node* node) 
{ 
    while (node != NULL) { 
        cout << node->data%10; 
        node = node->next; 
    }  
    cout<<"\n";
} 


// } Driver Code Ends
class Solution
{
    public:
    Node* reverseList(Node* &head)
    {
        Node* prev=NULL;
        Node* curr=head;
        while(curr!=NULL)
        {
            Node* forward=curr->next;
            curr->next=prev;
            prev=curr;
            curr=forward;
        }
        return prev;
    }
    Node* addOne(Node *head) 
    {
      //step 1 reverse list
      head=reverseList(head);
      //step 2 add one
      //mujhe + krna hai toh carry ko hee 1 maanleti hu
      int carry=1;
      Node* temp=head;
      while(temp!=NULL)
      {  int sum=carry+temp->data;
      //current node m 1 hi digit store hoga,double digit nhi ho skta
      //ek digit nikaalo 
      //carry bhi nikalo
       int digit=sum%10;
       carry=sum/10;
       temp->data=digit;
       //special case eg like 999
       //create a new node
       if(temp->next==NULL && carry!=0)
       { //ye tab chlega eg like 999
           Node* newNode=new Node(carry);
           newNode->next=NULL;
           temp->next=newNode;
           temp=newNode;
       }
       //move to next node
       //traverse kr rhe hai toh aage toh bdhna hai hee
       temp=temp->next;
} 
        head=reverseList(head);
        return head;
    } 
};

//{ Driver Code Starts.

int main() 
{ 
    int t;
    cin>>t;
    while(t--)
    {
        string s;
        cin>>s;
        
        Node* head = new Node( s[0]-'0' );
        Node* tail = head;
        for(int i=1; i<s.size(); i++)
        {
            tail->next = new Node( s[i]-'0' );
            tail = tail->next;
        }
        Solution ob;
        head = ob.addOne(head);
        printList(head); 
    }
    return 0; 
} 

// } Driver Code Ends
