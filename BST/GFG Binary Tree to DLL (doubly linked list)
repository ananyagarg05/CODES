//Binary Tree to DLL
//GFG
//Company Tags
//Morgan Stanley Accolite Amazon Microsoft Snapdeal Goldman Sachs Salesforce

//code starts here
class Solution {
  public:
//approach 1 :inorder reverse krdia RNL
  void solve(Node*root,Node*& head)
  {    if(root==NULL)
      {
          return;
      }
      //RNL
      //R
      solve(root->right,head);
      //assume kr skte hai right part ki LL bngyi hogi
      //and head right part ki ll k start node pr hoga
      root->right=head;
      if(head!=NULL)
      {
          head->left=root;
      }
      //yaha tk aapki N and RN ki LL bn chuki hai
      //head update krna hai
      head=root;
      //ab tree ka left part pending hai
      solve(root->left,head);
      
  }
    Node* bToDLL(Node* root) {
     Node* head=NULL;
     solve(root,head);
     return head;
    }
};

//another approach by using inorder only without reversing , through tail

  void solve(Node*root,Node*& head, Node*& tail)
  {
       if(root==NULL)
      {
          return;
      }
      //LNR 
       solve(root->left,head,tail);
       //head and tail update and root node ko connect to left ll
       if(tail!=NULL)
       {
           tail->right=root;
           root->left=tail;
           tail=root; //updated
       }
       else
       {  head=root;
       tail=root; 
       //agr tail hee null thi toh
       }
       //
       solve(root->right,head,tail);
     }
    Node* bToDLL(Node* root) {
     Node* head=NULL;
     Node* tail=NULL;
     solve(root,head,tail);
     return head;
    }
};

